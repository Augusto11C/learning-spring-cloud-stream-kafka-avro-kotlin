/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UserCreationEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6597904534239699528L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserCreationEvent\",\"namespace\":\"br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema\",\"fields\":[{\"name\":\"NAME\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"AGE\",\"type\":\"int\"},{\"name\":\"ADDRESS\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"SITE\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"LAST_NAME\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserCreationEvent> ENCODER =
      new BinaryMessageEncoder<UserCreationEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserCreationEvent> DECODER =
      new BinaryMessageDecoder<UserCreationEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserCreationEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserCreationEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserCreationEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserCreationEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserCreationEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserCreationEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserCreationEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserCreationEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String NAME;
  @Deprecated public int AGE;
  @Deprecated public java.lang.String ADDRESS;
  @Deprecated public java.lang.String SITE;
  @Deprecated public java.lang.String LAST_NAME;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserCreationEvent() {}

  /**
   * All-args constructor.
   * @param NAME The new value for NAME
   * @param AGE The new value for AGE
   * @param ADDRESS The new value for ADDRESS
   * @param SITE The new value for SITE
   * @param LAST_NAME The new value for LAST_NAME
   */
  public UserCreationEvent(java.lang.String NAME, java.lang.Integer AGE, java.lang.String ADDRESS, java.lang.String SITE, java.lang.String LAST_NAME) {
    this.NAME = NAME;
    this.AGE = AGE;
    this.ADDRESS = ADDRESS;
    this.SITE = SITE;
    this.LAST_NAME = LAST_NAME;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return NAME;
    case 1: return AGE;
    case 2: return ADDRESS;
    case 3: return SITE;
    case 4: return LAST_NAME;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: NAME = value$ != null ? value$.toString() : null; break;
    case 1: AGE = (java.lang.Integer)value$; break;
    case 2: ADDRESS = value$ != null ? value$.toString() : null; break;
    case 3: SITE = value$ != null ? value$.toString() : null; break;
    case 4: LAST_NAME = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'NAME' field.
   * @return The value of the 'NAME' field.
   */
  public java.lang.String getNAME() {
    return NAME;
  }


  /**
   * Sets the value of the 'NAME' field.
   * @param value the value to set.
   */
  public void setNAME(java.lang.String value) {
    this.NAME = value;
  }

  /**
   * Gets the value of the 'AGE' field.
   * @return The value of the 'AGE' field.
   */
  public int getAGE() {
    return AGE;
  }


  /**
   * Sets the value of the 'AGE' field.
   * @param value the value to set.
   */
  public void setAGE(int value) {
    this.AGE = value;
  }

  /**
   * Gets the value of the 'ADDRESS' field.
   * @return The value of the 'ADDRESS' field.
   */
  public java.lang.String getADDRESS() {
    return ADDRESS;
  }


  /**
   * Sets the value of the 'ADDRESS' field.
   * @param value the value to set.
   */
  public void setADDRESS(java.lang.String value) {
    this.ADDRESS = value;
  }

  /**
   * Gets the value of the 'SITE' field.
   * @return The value of the 'SITE' field.
   */
  public java.lang.String getSITE() {
    return SITE;
  }


  /**
   * Sets the value of the 'SITE' field.
   * @param value the value to set.
   */
  public void setSITE(java.lang.String value) {
    this.SITE = value;
  }

  /**
   * Gets the value of the 'LAST_NAME' field.
   * @return The value of the 'LAST_NAME' field.
   */
  public java.lang.String getLASTNAME() {
    return LAST_NAME;
  }


  /**
   * Sets the value of the 'LAST_NAME' field.
   * @param value the value to set.
   */
  public void setLASTNAME(java.lang.String value) {
    this.LAST_NAME = value;
  }

  /**
   * Creates a new UserCreationEvent RecordBuilder.
   * @return A new UserCreationEvent RecordBuilder
   */
  public static br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder newBuilder() {
    return new br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder();
  }

  /**
   * Creates a new UserCreationEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserCreationEvent RecordBuilder
   */
  public static br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder newBuilder(br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder other) {
    if (other == null) {
      return new br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder();
    } else {
      return new br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder(other);
    }
  }

  /**
   * Creates a new UserCreationEvent RecordBuilder by copying an existing UserCreationEvent instance.
   * @param other The existing instance to copy.
   * @return A new UserCreationEvent RecordBuilder
   */
  public static br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder newBuilder(br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent other) {
    if (other == null) {
      return new br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder();
    } else {
      return new br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserCreationEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserCreationEvent>
    implements org.apache.avro.data.RecordBuilder<UserCreationEvent> {

    private java.lang.String NAME;
    private int AGE;
    private java.lang.String ADDRESS;
    private java.lang.String SITE;
    private java.lang.String LAST_NAME;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.NAME)) {
        this.NAME = data().deepCopy(fields()[0].schema(), other.NAME);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.AGE)) {
        this.AGE = data().deepCopy(fields()[1].schema(), other.AGE);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ADDRESS)) {
        this.ADDRESS = data().deepCopy(fields()[2].schema(), other.ADDRESS);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.SITE)) {
        this.SITE = data().deepCopy(fields()[3].schema(), other.SITE);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.LAST_NAME)) {
        this.LAST_NAME = data().deepCopy(fields()[4].schema(), other.LAST_NAME);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing UserCreationEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.NAME)) {
        this.NAME = data().deepCopy(fields()[0].schema(), other.NAME);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AGE)) {
        this.AGE = data().deepCopy(fields()[1].schema(), other.AGE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ADDRESS)) {
        this.ADDRESS = data().deepCopy(fields()[2].schema(), other.ADDRESS);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SITE)) {
        this.SITE = data().deepCopy(fields()[3].schema(), other.SITE);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.LAST_NAME)) {
        this.LAST_NAME = data().deepCopy(fields()[4].schema(), other.LAST_NAME);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'NAME' field.
      * @return The value.
      */
    public java.lang.String getNAME() {
      return NAME;
    }


    /**
      * Sets the value of the 'NAME' field.
      * @param value The value of 'NAME'.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder setNAME(java.lang.String value) {
      validate(fields()[0], value);
      this.NAME = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'NAME' field has been set.
      * @return True if the 'NAME' field has been set, false otherwise.
      */
    public boolean hasNAME() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'NAME' field.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder clearNAME() {
      NAME = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'AGE' field.
      * @return The value.
      */
    public int getAGE() {
      return AGE;
    }


    /**
      * Sets the value of the 'AGE' field.
      * @param value The value of 'AGE'.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder setAGE(int value) {
      validate(fields()[1], value);
      this.AGE = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'AGE' field has been set.
      * @return True if the 'AGE' field has been set, false otherwise.
      */
    public boolean hasAGE() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'AGE' field.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder clearAGE() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ADDRESS' field.
      * @return The value.
      */
    public java.lang.String getADDRESS() {
      return ADDRESS;
    }


    /**
      * Sets the value of the 'ADDRESS' field.
      * @param value The value of 'ADDRESS'.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder setADDRESS(java.lang.String value) {
      validate(fields()[2], value);
      this.ADDRESS = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ADDRESS' field has been set.
      * @return True if the 'ADDRESS' field has been set, false otherwise.
      */
    public boolean hasADDRESS() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ADDRESS' field.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder clearADDRESS() {
      ADDRESS = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'SITE' field.
      * @return The value.
      */
    public java.lang.String getSITE() {
      return SITE;
    }


    /**
      * Sets the value of the 'SITE' field.
      * @param value The value of 'SITE'.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder setSITE(java.lang.String value) {
      validate(fields()[3], value);
      this.SITE = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'SITE' field has been set.
      * @return True if the 'SITE' field has been set, false otherwise.
      */
    public boolean hasSITE() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'SITE' field.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder clearSITE() {
      SITE = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'LAST_NAME' field.
      * @return The value.
      */
    public java.lang.String getLASTNAME() {
      return LAST_NAME;
    }


    /**
      * Sets the value of the 'LAST_NAME' field.
      * @param value The value of 'LAST_NAME'.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder setLASTNAME(java.lang.String value) {
      validate(fields()[4], value);
      this.LAST_NAME = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'LAST_NAME' field has been set.
      * @return True if the 'LAST_NAME' field has been set, false otherwise.
      */
    public boolean hasLASTNAME() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'LAST_NAME' field.
      * @return This builder.
      */
    public br.com.silveira.raphael.spring.cloud.stream.kafka.avro.infrastructure.schema.UserCreationEvent.Builder clearLASTNAME() {
      LAST_NAME = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserCreationEvent build() {
      try {
        UserCreationEvent record = new UserCreationEvent();
        record.NAME = fieldSetFlags()[0] ? this.NAME : (java.lang.String) defaultValue(fields()[0]);
        record.AGE = fieldSetFlags()[1] ? this.AGE : (java.lang.Integer) defaultValue(fields()[1]);
        record.ADDRESS = fieldSetFlags()[2] ? this.ADDRESS : (java.lang.String) defaultValue(fields()[2]);
        record.SITE = fieldSetFlags()[3] ? this.SITE : (java.lang.String) defaultValue(fields()[3]);
        record.LAST_NAME = fieldSetFlags()[4] ? this.LAST_NAME : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserCreationEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserCreationEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserCreationEvent>
    READER$ = (org.apache.avro.io.DatumReader<UserCreationEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.NAME);

    out.writeInt(this.AGE);

    out.writeString(this.ADDRESS);

    if (this.SITE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SITE);
    }

    if (this.LAST_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LAST_NAME);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.NAME = in.readString();

      this.AGE = in.readInt();

      this.ADDRESS = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.SITE = null;
      } else {
        this.SITE = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LAST_NAME = null;
      } else {
        this.LAST_NAME = in.readString();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.NAME = in.readString();
          break;

        case 1:
          this.AGE = in.readInt();
          break;

        case 2:
          this.ADDRESS = in.readString();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SITE = null;
          } else {
            this.SITE = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LAST_NAME = null;
          } else {
            this.LAST_NAME = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










